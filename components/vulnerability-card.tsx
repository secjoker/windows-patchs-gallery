"use client"

import React from "react"
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "./ui/card"
import { Badge } from "./ui/badge"
import { format, parseISO } from "date-fns"
import { zhCN } from "date-fns/locale"
import { AlertTriangle, Calendar, FileText, Info, Server, Shield, Zap } from "lucide-react"
import { formatDate, getSeverityChinese, getImpactChinese } from "@/lib/utils"
import { Button } from "./ui/button"

export interface Vulnerability {
  cveNumber: string
  cveTitle: string
  releaseDate: string
  severity: "Critical" | "Important" | "Moderate" | "Low"
  baseScore: number
  impact: string
  exploited: boolean
  customerActionRequired: boolean
  kbNumbers: string[]
  productAffected: string[]
}

interface VulnerabilityCardProps {
  vulnerability: Vulnerability
  onClick?: () => void
}

// 根据严重性级别返回对应的样式类名
function getSeverityColor(severity: string): string {
  switch (severity) {
    case "Critical":
      return "bg-danger text-white"
    case "Important":
      return "bg-warning text-white"
    case "Moderate":
      return "bg-orange-400 text-white"
    case "Low":
      return "bg-success text-white"
    default:
      return "bg-gray-500 text-white"
  }
}

export function VulnerabilityCard({ vulnerability, onClick }: VulnerabilityCardProps) {
  const { 
    cveNumber, 
    cveTitle, 
    releaseDate, 
    severity, 
    baseScore, 
    impact, 
    exploited, 
    customerActionRequired, 
    kbNumbers, 
    productAffected 
  } = vulnerability
  
  const msrcUrl = `https://msrc.microsoft.com/update-guide/vulnerability/${cveNumber}`
  
  return (
    <Card className="bg-white rounded-lg shadow-md overflow-hidden">
      <div className="p-4 border-b">
        <h3 className="text-lg font-semibold">
          <a 
            href={msrcUrl} 
            target="_blank" 
            rel="noopener noreferrer" 
            className="text-blue-600 hover:underline"
          >
            {cveNumber}
          </a>
        </h3>
        <p className="text-sm text-gray-600">发布日期: {format(parseISO(releaseDate), 'yyyy年MM月dd日')}</p>
      </div>
      
      <div className="p-4">
        <p className="text-sm mb-3">{cveTitle}</p>
        <div className="flex flex-wrap gap-2 mt-2">
          <span className={`text-xs font-medium px-2.5 py-0.5 rounded ${getSeverityColor(severity)}`}>
            {getSeverityChinese(severity)}
          </span>
          
          {exploited && (
            <span className="bg-red-500 text-white text-xs font-medium px-2.5 py-0.5 rounded">
              已利用
            </span>
          )}
          
          {baseScore > 0 && (
            <span className="bg-blue-500 text-white text-xs font-medium px-2.5 py-0.5 rounded">
              CVSS: {baseScore.toFixed(1)}
            </span>
          )}
        </div>
      </div>
      
      <div className="px-4 py-3 bg-gray-50 border-t flex justify-between">
        <button 
          onClick={onClick} 
          className="text-primary hover:underline text-sm"
        >
          查看详情
        </button>
        <a 
          href={msrcUrl} 
          target="_blank" 
          rel="noopener noreferrer" 
          className="text-primary hover:underline text-sm"
        >
          MSRC
        </a>
      </div>
    </Card>
  )
}
