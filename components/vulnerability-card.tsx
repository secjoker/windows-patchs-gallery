"use client"

import { Card } from "./ui/card"
import { Badge } from "./ui/badge"
import { formatDate, getSeverityChinese, getImpactChinese } from "@/lib/utils"

export interface Vulnerability {
  cveNumber: string
  cveTitle: string
  releaseDate: string
  severity: "Critical" | "Important" | "Moderate" | "Low"
  baseScore: number
  impact: string
  exploited: boolean
  customerActionRequired: boolean
  kbNumbers: string[]
  productAffected: string[]
}

interface VulnerabilityCardProps {
  vulnerability: Vulnerability
  onClick?: () => void
}

export function VulnerabilityCard({ vulnerability, onClick }: VulnerabilityCardProps) {
  const {
    cveNumber,
    cveTitle,
    releaseDate,
    severity,
    baseScore,
    impact,
    exploited,
    customerActionRequired,
    kbNumbers,
    productAffected,
  } = vulnerability

  return (
    <Card
      className="p-4 hover:shadow-lg transition-shadow cursor-pointer"
      onClick={onClick}
    >
      <div className="flex items-start justify-between mb-2">
        <h3 className="text-lg font-semibold text-gray-900 dark:text-gray-100">
          {cveNumber}
        </h3>
        <Badge
          variant={
            severity === "Critical"
              ? "destructive"
              : severity === "Important"
              ? "secondary"
              : "default"
          }
        >
          {getSeverityChinese(severity)}
        </Badge>
      </div>
      
      <p className="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2">
        {cveTitle}
      </p>
      
      <div className="flex flex-wrap gap-2 mb-3">
        {exploited && (
          <Badge variant="outline" className="text-red-500 border-red-500">
            已被利用
          </Badge>
        )}
        {customerActionRequired && (
          <Badge variant="outline" className="text-orange-500 border-orange-500">
            需要客户操作
          </Badge>
        )}
        <Badge variant="outline">
          CVSS: {baseScore}
        </Badge>
      </div>
      
      <div className="text-sm text-gray-500 dark:text-gray-400">
        <div className="flex items-center gap-2 mb-1">
          <i className="fas fa-calendar-alt w-4"></i>
          <span>{formatDate(new Date(releaseDate))}</span>
        </div>
        <div className="flex items-center gap-2 mb-1">
          <i className="fas fa-shield-alt w-4"></i>
          <span>{getImpactChinese(impact)}</span>
        </div>
        <div className="flex items-center gap-2">
          <i className="fas fa-laptop w-4"></i>
          <span className="line-clamp-1">
            {productAffected.length > 0
              ? productAffected.join(", ")
              : "所有产品"}
          </span>
        </div>
      </div>
    </Card>
  )
}
