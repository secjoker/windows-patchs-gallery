"use client"

import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Vulnerability } from "@/lib/api";
import { format } from "date-fns";
import Link from "next/link";

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
}

export function VulnerabilityCard({ vulnerability }: VulnerabilityCardProps) {
  // Format the release date
  const releaseDate = new Date(vulnerability.releaseDate);
  const formattedDate = format(releaseDate, "yyyy-MM-dd");
  
  // Determine severity class
  let severityClass = "bg-gray-100 text-gray-800";
  if (vulnerability.severity === "Critical") {
    severityClass = "bg-red-100 text-red-800";
  } else if (vulnerability.severity === "Important") {
    severityClass = "bg-orange-100 text-orange-800";
  } else if (vulnerability.severity === "Low") {
    severityClass = "bg-blue-100 text-blue-800";
  }
  
  // Determine if exploited
  const isExploited = vulnerability.exploited === "Yes";
  const isPubliclyDisclosed = vulnerability.publiclyDisclosed === "Yes";
  
  return (
    <Card className="h-full flex flex-col">
      <CardHeader>
        <CardTitle className="flex items-center justify-between">
          <Link 
            href={`/vulnerability/${vulnerability.cveNumber}`}
            className="text-blue-600 hover:underline"
          >
            {vulnerability.cveNumber}
          </Link>
        </CardTitle>
        <CardDescription>Released: {formattedDate}</CardDescription>
      </CardHeader>
      <CardContent className="flex-grow">
        <p className="text-sm mb-3">{vulnerability.cveTitle}</p>
        <div className="flex flex-wrap gap-2 mt-2">
          {vulnerability.severity && (
            <span className={`${severityClass} text-xs font-medium px-2.5 py-0.5 rounded`}>
              {vulnerability.severity}
            </span>
          )}
          {vulnerability.impact && (
            <span className="bg-purple-100 text-purple-800 text-xs font-medium px-2.5 py-0.5 rounded">
              {vulnerability.impact}
            </span>
          )}
          {isExploited && (
            <span className="bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded">
              Exploited
            </span>
          )}
          {isPubliclyDisclosed && (
            <span className="bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded">
              Publicly Disclosed
            </span>
          )}
        </div>
      </CardContent>
      <CardFooter className="pt-0">
        <div className="flex justify-between w-full">
          <Link href={`/vulnerability/${vulnerability.cveNumber}`}>
            <Button variant="outline" size="sm">View Details</Button>
          </Link>
          <a 
            href={`https://msrc.microsoft.com/update-guide/vulnerability/${vulnerability.cveNumber}`}
            target="_blank"
            rel="noopener noreferrer"
          >
            <Button variant="ghost" size="sm">MSRC</Button>
          </a>
        </div>
      </CardFooter>
    </Card>
  );
}
